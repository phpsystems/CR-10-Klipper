# This file contains pin mappings for the Creality CR-10S Pro V2. To use
# this config, the firmware should be compiled for the AVR atmega2560.

# See docs/Config_Reference.md for a description of parameters.

## General Config
[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A10KJUTH-if00-port0

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[mcu pico]
#serial: /tmp/blah

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 10
max_z_accel: 100

## Stepper Motors and Extruder
[stepper_x]
step_pin: PF0 #ar54
dir_pin: PF1 #ar55
enable_pin: !PD7 #!ar38
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^PE5 #^ar3
position_endstop: 0
position_min: 0
position_max: 450
homing_speed: 50
homing_retract_dist: 5

[stepper_y]
step_pin: PF6 #ar60
dir_pin: !PF7 #ar61
enable_pin: !PF2 #!ar56
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^PJ1 #^ar14
position_endstop: 0
position_min: 0
position_max: 450
homing_speed: 50
homing_retract_dist: 5

[stepper_z]
step_pin: PL3 #ar46
dir_pin: !PL1 #!ar48
enable_pin: !PK0 #!ar62
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 460 # you can go higher but then the cables crimp

[extruder]
step_pin: PA4 # ar26
dir_pin: PA6 # !ar28
enable_pin: !PA2 # !ar24
rotation_distance: 22.900
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0
heater_pin: PB4 #ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5 #analog13
#control: pid #calibrated in Klipper, you will need to run this for your machine
#pid_kp: 28.359
#pid_ki: 1.616
#pid_kd: 124.426
min_extrude_temp: 170
min_temp: 5
max_temp: 275

[fan]
pin: PH6 #ar9

[heater_bed]
heater_pin: PH5 #ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6 #analog14
#control: pid #calibrated in Klipper, you will need to run this for your machine
#pid_kp: 70.936
#pid_ki: 1.151
#pid_kd: 1093.298
min_temp: 5
max_temp: 140

## BLTouch and Safe Z Settings
[bltouch]
sensor_pin: ^PD2
control_pin: PB5
stow_on_each_sample: False # Be careful
probe_with_touch_mode: False
#pin_up_reports_not_triggered=True
#pin_up_touch_mode_reports_triggered
x_offset: -27
y_offset: -2
# you will need to calibrate the z_offset in Klipper
#z_offset: 2.2 
speed: 4.0
samples: 2
sample_retract_dist: 3.0

[safe_z_home]
home_xy_position: 225,225
speed: 50.0
z_hop: 10.0
z_hop_speed: 5.0

[bed_mesh]
speed: 150
horizontal_move_z: 6
mesh_min: 50, 50
mesh_max: 400, 400
probe_count: 5,5
algorithm: bicubic
fade_start: 1
fade_end: 10

[filament_switch_sensor e0_sensor]
switch_pin: PE4 #ar2
pause_on_runout: True
runout_gcode:
  M600
#runout_gcode:
#  PAUSE_PARK

[input_shaper]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-1 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro M117]
#rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

[gcode_macro FILAMENT_LOAD]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E400 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

[gcode_macro FILAMENT_UNLOAD]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E-400 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

## Calibrating the Bed
# this is for the bltouch to calibrate the bed
[screws_tilt_adjust]
screw1: 40,40
screw1_name: front left screw
screw2: 295,40
screw2_name: front right screw
screw3: 295,280
screw3_name: rear right screw
screw4: 40,280
screw4_name: rear left screw
speed: 50
horizontal_move_z: 10
screw_thread: CW-M3

[bed_screws]
screw1: 13,38
screw1_name: front left screw
screw2: 268,38
screw2_name: front right screw
screw3: 268,278
screw3_name: rear right screw
screw4: 13,38
screw4_name: rear left screw
horizontal_move_z: 5

[pause_resume]

# Need to flash the t5uid1 first.
#[t5uid1]
#firmware: dgus_reloaded


#[adxl345 hotend]
#cs_pin: rpi:None

#[adxl345 bed]
## Assuming `bed` chip is connected to a printer MCU board
#cs_pin: ...  # Printer board SPI chip select (CS) pin

#[resonance_tester]
##accel_chip: adxl345
#accel_chip_x: adxl345 hotend
#accel_chip_y: adxl345 bed
#probe_points:
#    100, 100, 20  # an example

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.810
#*# pid_ki = 1.088
#*# pid_kd = 141.418
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.038
#*# pid_ki = 1.295
#*# pid_kd = 841.983
#*#
#*# [bltouch]
#*# z_offset = 2.049
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.173750, -0.015000, -0.063750, -0.002500, 0.141250
#*# 	  0.317500, 0.105000, 0.001250, 0.048750, 0.138750
#*# 	  0.397500, 0.138750, -0.022500, -0.053750, 0.022500
#*# 	  0.536250, 0.258750, 0.016250, -0.062500, -0.055000
#*# 	  0.576250, 0.225000, -0.037500, -0.193750, -0.230000
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 400.0
#*# mesh_x_pps = 2
#*# max_x = 400.0
